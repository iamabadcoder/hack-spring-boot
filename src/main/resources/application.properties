#### SERVER CONFIG ####
server.port=8080
server.session-timeout=60
#### DATASOURCE CONFIG ####
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/hack_spring_boot?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=root
#### SPRING DATA JPA CONFIG ####
spring.jpa.database=MYSQL
spring.jpa.show-sql=true
#create：每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。create-drop：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等应用第一次运行起来后才会。validate：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#### thymeleaf config ####
spring.thymeleaf.mode=HTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.thymeleaf.cache=false 
#### LOGBACK CONFIG ####
logging.config=classpath:logback-spring.xml
#### METRICS CONFIG ####
endpoints.enabled=true
management.security.enabled=false
endpoints.health.sensitive=false
##
#info.app.name=hack-spring-boot
#info.app.version=0.0.1-SNAPSHOT
#info.build.artifactId=@project.artifactId@
#info.build.version=@project.version@